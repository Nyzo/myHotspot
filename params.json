{"name":"myHotspot","tagline":"myHotspot est un script pour linux, permettant de créer un faux point d'accès wifi afin de récupérer les données des personnes connectées. Il existe plusieurs fonctionnalités.","body":"![myHotspot](http://mtfo.fr/myhotspot.png)\r\n# myHotspot 1.3 - Par Nyzo\r\n*myhotspot.sh* créé de faux points d'accès wifi (hotspot), utilisant Airbase-ng et MITMf.\r\n***\r\n## Installation\r\n### Configuration\r\nFonctionne sur Ubuntu 14.04 LTS et les versions antérieures, **si vous n'êtes pas en ethernet, vous devrez avoir deux cartes wifi (soit wlan0 et wlan1, généralement)**\r\n### Paquets requis\r\nDHCP, Aircrack, MITMf.\r\n```sh\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\nsudo apt-get install isc-dhcp-server aircrack-ng python\r\n```\r\nPour MITMf :\r\n```sh\r\ncd /etc\r\nsudo git clone https://github.com/byt3bl33d3r/MITMf.git\r\ncd MITMf\r\nsudo pip install -r requirements.txt\r\nsu root\r\n./setup.sh\r\n```\r\nSur Kali, une erreur peut apparaître : *ImportError: no module named pcap*. Pour résoude cette erreur, lancez la commande : \r\n```sh\r\nsudo apt-get install python-pycap\r\n```\r\nPlus d'infos sur [MITMf].\r\n### Installer\r\nClonez le dépôt Github :\r\n```sh\r\ncd /etc/\r\nsudo clone git https://github.com/Nyzo/myHotspot.git\r\nsudo chmod 755 myhotspot.sh\r\n```\r\nSi vous n'avez pas installer git :\r\n```sh\r\napt-get install git\r\n```\r\n## Utiliser le script\r\nIdentifiez-vous en tant que root :\r\n```sh\r\nsu root\r\n```\r\nAllez dans le répertoire myHotspot :\r\n```sh\r\ncd /etc/myHotspot/\r\n```\r\nLancez le script :\r\n```sh\r\n./myhotspot.sh\r\n```\r\nEt suivez les instructions.\r\n## Correction de bug(s)\r\n*Contactez-moi si vous rencontrez n'importe quel bug(s), j'emploierai tout les moyens possibles pour le(s) résoudre(s).*\r\n\r\nParfois, au lancement du serveur DHCP, une erreur apparaît comme :\r\n```\r\nCan't open /etc/dhcp/dhcp.conf: permission denied\r\n```\r\nou\r\n```\r\nCan't open /var/lib/dhcp/dhcpd.leases: permission denied.\r\n```\r\nou\r\n```\r\nCan't open /pentest/wireless/myhotspot/dhcpd.conf: Permission denied\r\n```\r\n\r\nSi après avoir vérifier les permissions cela affiche toujours un message d'erreur, vérifiez **apparmor** :\r\n```sh\r\nsudo apparmor_status\r\n```\r\n\r\nSi **/usr/sbin/dhcpd** est présent dans la liste, suivez ces instructions :\r\n\r\n* Arrêtez apparmor\r\n```sh\r\nsudo /etc/init.d/apparmor stop\r\n```\r\n* Editez /etc/apparmor.d/usr.sbin.dhcpd avec les permissions root :\r\n```sh\r\nsudo nano /etc/apparmor.d/usr.sbin.dhcpd\r\n```\r\n* Et assurez-vous que le fichier contient ces lignes (peu importe l'ordre) :\r\n```sh\r\n  /etc/dhcp/ r,\r\n  /etc/dhcp/** r,\r\n  /etc/dhcpd{,6}.conf r,\r\n  /etc/dhcpd{,6}_ldap.conf r,\r\n  /pentest/wireless/myhotspot/dhcpd{,6}.conf r,\r\n\r\n  /usr/sbin/dhcpd mr,\r\n\r\n  /var/lib/dhcp/dhcpd{,6}.leases* lrw,\r\n  /var/log/ r,\r\n  /var/log/** rw,\r\n  /{,var/}run/{,dhcp-server/}dhcpd{,6}.pid rw,\r\n```\r\n* Démarrez apparmor\r\n```sh\r\nsudo /etc/init.d/apparmor start\r\n```\r\n\r\nAprès cette opération, apparmor va autoriser le serveur DHCP à ouvrir les fichiers /etc/dhcp/dhcpd.conf or /var/lib/dhcp/dhcpd.leases ou /pentest/wireless/myhotspot/dhcpd.conf. Pour plus d'informations, regardez **man apparmor**\r\n\r\n\r\nSi au lancement de MITMf une erreur similaire à celle-ci apparaît :\r\n```sh\r\nTraceback (most recent call last):\r\n  File \"mitmf.py\", line 41, in <module>\r\n    import user_agents\r\n  File \"/usr/local/lib/python2.7/dist-packages/user_agents/__init__.py\", line 3, in <module>\r\n    from .parsers import parse\r\n  File \"/usr/local/lib/python2.7/dist-packages/user_agents/parsers.py\", line 4, in <module>\r\n    from ua_parser import user_agent_parser\r\n  File \"/usr/local/lib/python2.7/dist-packages/ua_parser-0.4.0-py2.7.egg/ua_parser/user_agent_parser.py\", line 460, in <module>\r\n    yamlFile = open(yamlPath)\r\nIOError: [Errno 2] No such file or directory: '/usr/local/lib/python2.7/dist-packages/ua_parser-0.4.0-py2.7.egg/ua_parser/regexes.yaml'\r\n```\r\nAlors executez la commande suivante :\r\n```sh\r\npip install -e git+git://github.com/selwin/ua-parser.git#egg=ua-parser\r\n```\r\n\r\n\r\nSi au lancement de MITMf une erreur similaire à celle-ci apparaît :\r\n```sh\r\nTraceback (most recent call last):\r\n  File \"mitmf.py\", line 187, in <module>\r\n    DNSChef.getInstance().startUDP()\r\n  File \"/etc/MITMf/libs/dnschef/dnschef.py\", line 473, in startUDP\r\n    server = ThreadedUDPServer((self.server_address, int(self.port)), UDPHandler)\r\n  File \"/etc/MITMf/libs/dnschef/dnschef.py\", line 402, in __init__\r\n    SocketServer.UDPServer.__init__(self,server_address,RequestHandlerClass) \r\n  File \"/usr/lib/python2.7/SocketServer.py\", line 419, in __init__\r\n    self.server_bind()\r\n  File \"/usr/lib/python2.7/SocketServer.py\", line 430, in server_bind\r\n    self.socket.bind(self.server_address)\r\n  File \"/usr/lib/python2.7/socket.py\", line 224, in meth\r\n    return getattr(self._sock,name)(*args)\r\nsocket.error: [Errno 98] Address already in use\r\n```\r\nAlors executez la commande suivante :\r\n```sh\r\nnetstat -tulpn | grep :53\r\n```\r\nPuis repérez le PID associé au port 53 puis fermez-le :\r\n\r\n**(exemple)**\r\n```sh\r\nkill 2721\r\n```\r\n## À venir\r\nCorrection du bug du bypass ssl (hsts). Implémentation dans arduino (sous un autre langage). Simplification du script et augmentation de la rapidité de la navigation sur internet.\r\n\r\n[MITMf]:https://github.com/byt3bl33d3r/MITMf","google":"UA-36762029-1","note":"Don't delete this file! It's used internally to help with page regeneration."}